create schema querylog;
create extension pg_querylog schema querylog;
-- enable
set pg_querylog.enabled=on;
show pg_querylog.enabled;
 pg_querylog.enabled 
---------------------
 on
(1 row)

select pid > 0 as true, query, params,
	extract(year from start_time) = extract(year from now()) as true,
	end_time, running, overflow
from querylog.get_queries();
 true |                                   query                                   | params | true | end_time | running | overflow 
------+---------------------------------------------------------------------------+--------+------+----------+---------+----------
 t    | select pid > 0 as true, query, params,                                   +|        | t    |          | t       | f
      |         extract(year from start_time) = extract(year from now()) as true,+|        |      |          |         | 
      |         end_time, running, overflow                                      +|        |      |          |         | 
      | from querylog.get_queries();                                              |        |      |          |         | 
(1 row)

select pid > 0 as true, query, params, overflow,
	extract(year from start_time) > 0 as true
from querylog.running_queries;
 true |                       query                       | params | overflow | true 
------+---------------------------------------------------+--------+----------+------
 t    | select pid > 0 as true, query, params, overflow, +|        | f        | t
      |         extract(year from start_time) > 0 as true+|        |          | 
      | from querylog.running_queries;                    |        |          | 
(1 row)

prepare p1 as
	select $1 as c1, $2 as c2, pid > 0 as true, query, params,
		extract(year from start_time) > 0 as true
	from querylog.running_queries;
execute p1(1, 2);
 c1 | c2 | true |                               query                                | params  | true 
----+----+------+--------------------------------------------------------------------+---------+------
 1  | 2  | t    | prepare p1 as                                                     +| '1','2' | t
    |    |      |         select $1 as c1, $2 as c2, pid > 0 as true, query, params,+|         | 
    |    |      |                 extract(year from start_time) > 0 as true         +|         | 
    |    |      |         from querylog.running_queries;                             |         | 
(1 row)

execute p1('{1,2}'::int[], 1);
  c1   | c2 | true |                               query                                |   params    | true 
-------+----+------+--------------------------------------------------------------------+-------------+------
 {1,2} | 1  | t    | prepare p1 as                                                     +| '{1,2}','1' | t
       |    |      |         select $1 as c1, $2 as c2, pid > 0 as true, query, params,+|             | 
       |    |      |                 extract(year from start_time) > 0 as true         +|             | 
       |    |      |         from querylog.running_queries;                             |             | 
(1 row)

execute p1('{"one": "two"}'::jsonb, '{"one", "two"}'::text[]);
       c1       |    c2     | true |                               query                                |            params            | true 
----------------+-----------+------+--------------------------------------------------------------------+------------------------------+------
 {"one": "two"} | {one,two} | t    | prepare p1 as                                                     +| '{"one": "two"}','{one,two}' | t
                |           |      |         select $1 as c1, $2 as c2, pid > 0 as true, query, params,+|                              | 
                |           |      |                 extract(year from start_time) > 0 as true         +|                              | 
                |           |      |         from querylog.running_queries;                             |                              | 
(1 row)

prepare p2 as
	select length($1) as plen, length(query) + length(coalesce(params, '')) as buflen, overflow
	from querylog.running_queries;
execute p2(repeat('a', 10000));
 plen  | buflen | overflow 
-------+--------+----------
 10000 |  10140 | f
(1 row)

execute p2(repeat('a', 10240));
 plen  | buflen | overflow 
-------+--------+----------
 10240 |  10239 | t
(1 row)

execute p2(repeat('a', 10340));
 plen  | buflen | overflow 
-------+--------+----------
 10340 |  10239 | t
(1 row)

execute p2(repeat('b', 20000));
 plen  | buflen | overflow 
-------+--------+----------
 20000 |  10239 | t
(1 row)

execute p2(repeat('c', 30000));
 plen  | buflen | overflow 
-------+--------+----------
 30000 |  10239 | t
(1 row)

drop schema querylog cascade;
NOTICE:  drop cascades to extension pg_querylog
