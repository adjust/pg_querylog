create schema backlog;
create extension pg_querylog schema backlog;
select pid > 0 as true, query, params,
	extract(year from start_time) = extract(year from now()) as true,
	end_time, running, overflow
from backlog.get_queries();
 true |                                   query                                   | params | true | end_time | running | overflow 
------+---------------------------------------------------------------------------+--------+------+----------+---------+----------
 t    | select pid > 0 as true, query, params,                                   +|        | t    |          | t       | f
      |         extract(year from start_time) = extract(year from now()) as true,+|        |      |          |         | 
      |         end_time, running, overflow                                      +|        |      |          |         | 
      | from backlog.get_queries();                                               |        |      |          |         | 
(1 row)

select pid > 0 as true, query, params,
	extract(year from start_time) > 0 as true
from backlog.running_queries;
 true |                       query                       | params | true 
------+---------------------------------------------------+--------+------
 t    | select pid > 0 as true, query, params,           +|        | t
      |         extract(year from start_time) > 0 as true+|        | 
      | from backlog.running_queries;                     |        | 
(1 row)

prepare p1 as select $1 as c1, $2 as c2, pid > 0 as true, query, params,
	extract(year from start_time) > 0 as true
from backlog.running_queries;
execute p1(1, 2);
 c1 | c2 | true |                                  query                                   | params  | true 
----+----+------+--------------------------------------------------------------------------+---------+------
 1  | 2  | t    | prepare p1 as select $1 as c1, $2 as c2, pid > 0 as true, query, params,+| '1','2' | t
    |    |      |         extract(year from start_time) > 0 as true                       +|         | 
    |    |      | from backlog.running_queries;                                            |         | 
(1 row)

execute p1('{1,2}'::int[], 1);
  c1   | c2 | true |                                  query                                   |   params    | true 
-------+----+------+--------------------------------------------------------------------------+-------------+------
 {1,2} | 1  | t    | prepare p1 as select $1 as c1, $2 as c2, pid > 0 as true, query, params,+| '{1,2}','1' | t
       |    |      |         extract(year from start_time) > 0 as true                       +|             | 
       |    |      | from backlog.running_queries;                                            |             | 
(1 row)

execute p1('{"one": "two"}'::jsonb, '{"one", "two"}'::text[]);
       c1       |    c2     | true |                                  query                                   |            params            | true 
----------------+-----------+------+--------------------------------------------------------------------------+------------------------------+------
 {"one": "two"} | {one,two} | t    | prepare p1 as select $1 as c1, $2 as c2, pid > 0 as true, query, params,+| '{"one": "two"}','{one,two}' | t
                |           |      |         extract(year from start_time) > 0 as true                       +|                              | 
                |           |      | from backlog.running_queries;                                            |                              | 
(1 row)

drop schema backlog cascade;
NOTICE:  drop cascades to extension pg_querylog
